CREATE DATABASE IF NOT EXISTS PROJECT1;
USE PROJECT1;

-- 1. LETS LOOK THE DATA;
SELECT * FROM DATASET1;
SELECT * FROM DATASET2;

-- 2. NUMBER OF RECORDS
SELECT COUNT(*) FROM DATASET1;
SELECT COUNT(*) FROM DATASET2;

-- 3. FILTERING OUT DATA OF TAMILNADU AND BIHAR
SELECT * FROM DATASET2 WHERE STATE IN ('BIHAR','TAMIL NADU');

-- 4. TOTAL POPULATION OF INDIA AND LAND;
SELECT sum(POPULATION) FROM DATASET2;

-- THE ANSWER IS COMING WRONG DUE TO WRONG DATATYPE! SO WE WILL CONVERT THE DATATYPE TO INT
SET SQL_SAFE_UPDATES = 0;
UPDATE DATASET2
SET POPULATION = REPLACE(POPULATION, ',', '');
UPDATE DATASET2
SET AREA_KM2 = REPLACE(AREA_KM2, ',', '');

SELECT sum(POPULATION) FROM DATASET2;
SELECT sum(AREA_KM2) FROM DATASET2;

-- 5. POPULATION DENSITY
SELECT SUM(POPULATION)/SUM(AREA_KM2) FROM DATASET2;

-- 6. TOP 5 FASTEST GROWING STATE OF INDIA
UPDATE DATASET1
SET GROWTH = REPLACE(GROWTH, '%', '');
SELECT STATE, AVG(GROWTH) 
FROM DATASET1
GROUP BY STATE
ORDER BY AVG(GROWTH) DESC
LIMIT 5;

-- 7. STATES WITH LOWEST LITERACY
SELECT STATE,AVG(LITERACY)
FROM DATASET1
GROUP BY STATE
ORDER BY AVG(LITERACY);

-- 8. SEX RATIOS OVER 1000
SELECT STATE,AVG(SEX_RATIO) AS AVG_SEX_R
FROM DATASET1
GROUP BY STATE
HAVING AVG_SEX_R>1000;

-- 9. STATE WITH HIGHEST POPULATION DENSITY
SELECT STATE, ROUND(SUM(POPULATION)/SUM(AREA_KM2),0) AS POP_DENSITY
FROM DATASET2
GROUP BY STATE
ORDER BY POP_DENSITY DESC;

-- 10. COMBINING BOTH THE TABLES
SELECT D1.STATE, D2.DISTRICT, D2.AREA_KM2, D2.POPULATION, D1.SEX_RATIO, D1.LITERACY, D1.GROWTH 
FROM DATASET1 D1
LEFT JOIN DATASET2 AS D2 
ON D1.DISTRICT = D2.DISTRICT;
CREATE TABLE RESULT(
	STATE VARCHAR(50),
    DISTRICT VARCHAR(50),
    AREA_KM2 INT,
    POPULATION BIGINT,
    SEX_RATIO INT,
    LITERACY DOUBLE,
    GROWTH DOUBLE
);

INSERT INTO RESULT
SELECT D1.STATE, D2.DISTRICT, D2.AREA_KM2, D2.POPULATION, D1.SEX_RATIO, D1.LITERACY, D1.GROWTH 
FROM DATASET1 D1
LEFT JOIN DATASET2 AS D2 
ON D1.DISTRICT = D2.DISTRICT;

SELECT * FROM RESULT;

-- 11. STATES OF CONCERN
SELECT 
STATE, 
SUM(POPULATION)/SUM(AREA_KM2) AS POPULATION_DENSITY, 
AVG(SEX_RATIO) AS AVERAGE_SEX_RATIO, 
AVG(GROWTH) AS AVERAGE_GROWTH
FROM RESULT
GROUP BY STATE
ORDER BY POPULATION_DENSITY DESC, AVERAGE_SEX_RATIO DESC, AVERAGE_GROWTH ASC
LIMIT 10;

-- 12. STATES STARTS WITH _
SELECT DISTINCT STATE
FROM RESULT
WHERE 
UPPER(STATE) 
LIKE 'A%' OR
UPPER(STATE) 
LIKE 'D%'; 